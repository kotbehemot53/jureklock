; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = uno ; Default build target

; Common settings for all environments
[env]
monitor_speed = 115200
lib_deps =
	z3t0/IRremote@^4.2.0
	mathertel/OneButton@^2.5.0
	contrem/arduino-timer@^3.0.1

[env:uno]
monitor_port = COM3
platform = atmelavr
board = uno
framework = arduino

; it actually works for upload via FTDI232 too!
[env:atmega_ext_UART_monitoring]
monitor_port = COM4
platform = atmelavr
;board = uno
board = ATmega328P
framework = arduino
upload_port = COM4

;; Run the following command to upload with this environment
;; pio run -e Upload_UART -t upload
;[env:Upload_UART]
;; Comment out to enable LTO (this line unflags it)
;build_unflags = -flto
;; Extra build flags
;build_flags =
;platform = atmelavr
;board = ATmega328P
;board_build.f_cpu = 8000000L
;framework = arduino
;; Serial bootloader protocol
;upload_protocol = arduino
;; Serial upload port
;upload_port = COM4
;; Set upload baudrate. Can be changed on the fly if using Urboot
;board_upload.speed = 38400
;;38400
;; ${env:fuses_bootloader.board_bootloader.speed}
;;upload_speed = 38400
;board_bootloader.speed = 115200
;;38400
;monitor_port = COM4

[env:program_via_ArduinoISP]
;monitor_port = COM4 doesn't work?
; Comment out to enable LTO (this line unflags it)
build_unflags = -flto
; Extra build flags
build_flags =
platform = atmelavr
board = ATmega328P
board_build.f_cpu = 8000000L
;board_hardware.oscillator = internal ; for burning bootloader only?
framework = arduino
upload_protocol = custom
upload_port = COM3
upload_speed = 19200
upload_flags =
	-C
; use "tool-avrdude-megaavr" for the atmelmegaavr platform
	${platformio.packages_dir}/tool-avrdude/avrdude.conf
	-p
	$BOARD_MCU
	-P
	$UPLOAD_PORT
	-b
	$UPLOAD_SPEED
	-c
	stk500v1
upload_command = avrdude $UPLOAD_FLAGS -U flash:w:$SOURCE:i

; Run the following command to set fuses
; pio run -e fuses_bootloader -t fuses
; Run the following command to set fuses + burn bootloader
; pio run -e fuses_bootloader -t bootloader
;[env:fuses_bootloader]
;board_build.f_cpu = 8000000L
;board_hardware.oscillator = internal ; Oscillator type
;board_bootloader.type = urboot       ; urboot, optiboot or no_bootloader
;board_bootloader.speed = 38400       ; Bootloader baud rate
;board_hardware.uart = uart0          ; Set UART to use for serial upload
;board_hardware.bod = 2.7v            ; Set brown-out detection
;board_hardware.eesave = yes          ; Preserve EEPROM when uploading using programmer
;upload_protocol = usbasp             ; Use the USBasp as programmer
;upload_flags =                       ; Select USB as upload port and divide the SPI clock by 8
;	-PUSB
;	-B8